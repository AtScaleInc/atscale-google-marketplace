global:
  ingressDomain: "local.localhost"
  atscale:
    tls:
      existingSecret: ""
      tlsCrt: ""
      tlsKey: ""

objectstoragejob:
  job:
    waitTimeout: 300
  serviceAccount:
    name: ""
  image:
    registry: ""
    repository: ""
    tag: ""
    pullPolicy: IfNotPresent

deployer:
  image: null

atscale:
  atscale-engine:
    #imagePullSecrets:
    #  - name: gcp-auth
    image:
      pullPolicy: IfNotPresent
    ingress:
      enabled: false

  atscale-sml:
    #imagePullSecrets:
    #  - name: gcp-auth
    image:
      pullPolicy: IfNotPresent
    ingress:
      enabled: false

  atscale-api:
    #imagePullSecrets:
    #  - name: gcp-auth
    image:
      pullPolicy: IfNotPresent
    ingress:
      enabled: false

  atscale-entitlement:
    #imagePullSecrets:
    #  - name: gcp-auth
    image:
      pullPolicy: IfNotPresent
    ingress:
      enabled: false

  kongproxy:
    postgresql:
      enabled: false
    image:
      pullPolicy: IfNotPresent
    customIngress:
      enabled: false

  postgres:
    postgresql:
      image:
        pullPolicy: IfNotPresent
    pgpool:
      image:
        pullPolicy: IfNotPresent
    metrics:
      image:
        pullPolicy: IfNotPresent

  redis:
    image:
      pullPolicy: IfNotPresent

  keycloak:
    image:
      pullPolicy: IfNotPresent
    customIngress:
      enabled: false

  git:
    fullnameOverride: git
    image:
      pullPolicy: IfNotPresent
    service:
       ports:
         http: 80

    customIngress:
      enabled: false

    ingress:
      enabled: false
      annotations:
        konghq.com/strip-path: "true"

  objectstorage:
    image:
      pullPolicy: IfNotPresent
    provisioning:
      enabled: false
    serviceAccount:
      create: false
    customIngress:
      enabled: false
    ingress:
      enabled: false

  grafana:
    image:
      pullPolicy: IfNotPresent
        # pullSecrets:
        #- "gcp-auth"
    customIngress:
      enabled: false
    ingress:
      enabled: false

  promtail:
    enabled: true
    serviceAccount:
      create: false

    image:
      pullPolicy: IfNotPresent

    defaultVolumeMounts:
      - name: pods
        mountPath: /var/log/pods
        readOnly: true
      - name: run
        mountPath: /run/promtail

    defaultVolumes:
      - name: pods
        hostPath:
          path: /var/log/pods
      - name: run
        emptyDir: { }

  telemetry:
    image:
      pullPolicy: IfNotPresent

  tempo:
    tempo:
      image:
        pullPolicy: IfNotPresent
    memcached:
      enabled: false

  loki:
    loki:
      image:
        pullPolicy: IfNotPresent

  mimir:
    mimir:
      image:
        pullPolicy: IfNotPresent
