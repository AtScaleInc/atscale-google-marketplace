global:
  ingressDomain: "local.localhost"
  atscale:
    tls:
      existingSecret: ""
      tlsCrt: ""
      tlsKey: ""

objectstoragejob:
  job:
    waitTimeout: 300
  serviceAccount:
    name: ""
  image:
    registry: "marketplace.gcr.io"
    repository: "atscale-public/atscale/objectstoragejob"
    tag: "2024.2.1"
    pullPolicy: IfNotPresent

deployer:
  image: null

atscale:
  atscale-engine:
    # imagePullSecrets:
    #  - name: gcp-auth
    image:
      repository: "marketplace.gcr.io/atscale-public/atscale/atscale-engine"
      tag: "2024.2.1"
      pullPolicy: IfNotPresent
    ingress:
      enabled: false

  atscale-sml:
    # imagePullSecrets:
    #  - name: gcp-auth
    image:
      repository: "marketplace.gcr.io/atscale-public/atscale/atscale-sml"
      tag: "2024.2.1"
      pullPolicy: IfNotPresent
    ingress:
      enabled: false

  atscale-api:
    # imagePullSecrets:
    #  - name: gcp-auth
    image:
      repository: "marketplace.gcr.io/atscale-public/atscale/atscale-api"
      tag: "2024.2.1"
      pullPolicy: IfNotPresent
    ingress:
      enabled: false
    publicApiIngress:
      enabled: false

  atscale-entitlement:
    # imagePullSecrets:
    #  - name: gcp-auth
    image:
      repository: "marketplace.gcr.io/atscale-public/atscale/atscale-entitlement"
      tag: "2024.2.1"
      pullPolicy: IfNotPresent
    ingress:
      enabled: false

  kongproxy:
    postgresql:
      enabled: false
    image:
      repository: "marketplace.gcr.io/atscale-public/atscale/kong"
      tag: "2024.2.1"
      pullPolicy: IfNotPresent
    customIngress:
      enabled: false
    ingressController:
      image:
        repository: marketplace.gcr.io/atscale-public/atscale/kong-ingress-controller
        tag: "2024.2.1"

  postgres:
    postgresql:
      image:
        registry: "marketplace.gcr.io"
        repository: "atscale-public/atscale/postgres"
        tag: "2024.2.1"
        pullPolicy: IfNotPresent
    pgpool:
      image:
        registry: "marketplace.gcr.io"
        repository: "atscale-public/atscale/pgpool"
        tag: "2024.2.1"
        pullPolicy: IfNotPresent
    metrics:
      image:
        registry: "marketplace.gcr.io"
        repository: "atscale-public/atscale/pgpool"
        tag: "2024.2.1"
        pullPolicy: IfNotPresent

  redis:
    image:
      registry: "marketplace.gcr.io"
      repository: "atscale-public/atscale/redis"
      tag: "2024.2.1"
      pullPolicy: IfNotPresent

  keycloak:
    image:
      registry: "marketplace.gcr.io"
      repository: "atscale-public/atscale/keycloak"
      tag: "2024.2.1"
      pullPolicy: IfNotPresent
    customIngress:
      enabled: false

  git:
    fullnameOverride: git
    image:
      registry: "marketplace.gcr.io"
      repository: "atscale-public/atscale/keycloak"
      tag: "2024.2.1"
      pullPolicy: IfNotPresent
    service:
      ports:
        http: 80

    customIngress:
      enabled: false

    ingress:
      enabled: false
      annotations:
        konghq.com/strip-path: "true"

  objectstorage:
    image:
      registry: "marketplace.gcr.io"
      repository: "atscale-public/atscale/objectstorage"
      tag: "2024.2.1"
      pullPolicy: IfNotPresent
    provisioning:
      enabled: false
    serviceAccount:
      create: false
    customIngress:
      enabled: false
    ingress:
      enabled: false

  grafana:
    image:
      registry: "marketplace.gcr.io"
      repository: "atscale-public/atscale/grafana"
      tag: "2024.2.1"
      pullPolicy: IfNotPresent
        # pullSecrets:
        # - "gcp-auth"
    customIngress:
      enabled: false
    ingress:
      enabled: false

  promtail:
    enabled: true
    serviceAccount:
      create: false

    image:
      registry: "marketplace.gcr.io"
      repository: "atscale-public/atscale/promtail"
      tag: "2024.2.1"
      pullPolicy: IfNotPresent

    defaultVolumeMounts:
      - name: pods
        mountPath: /var/log/pods
        readOnly: true
      - name: run
        mountPath: /run/promtail

    defaultVolumes:
      - name: pods
        hostPath:
          path: /var/log/pods
      - name: run
        emptyDir: {}

  telemetry:
    image:
      repository: "marketplace.gcr.io/atscale-public/atscale/telemetry"
      tag: "2024.2.1"
      pullPolicy: IfNotPresent

  tempo:
    tempo:
      image:
        registry: "marketplace.gcr.io"
        repository: "atscale-public/atscale/tempo"
        tag: "2024.2.1"
        pullPolicy: IfNotPresent
    memcached:
      enabled: false
    queryFrontend:
      query:
        registry: "marketplace.gcr.io"
        repository: "atscale-public/atscale/tempo-query"
        tag: "2024.2.1"

  loki:
    loki:
      image:
        registry: "marketplace.gcr.io"
        repository: "atscale-public/atscale/loki"
        tag: "2024.2.1"
        pullPolicy: IfNotPresent
    gateway:
      image:
        registry: "marketplace.gcr.io"
        repository: "atscale-public/atscale/loki-gateway"
        tag: "2024.2.1"


  mimir:
    mimir:
      image:
        registry: "marketplace.gcr.io"
        repository: "atscale-public/atscale/mimir"
        tag: "2024.2.1"
        pullPolicy: IfNotPresent
    gateway:
      registry: "marketplace.gcr.io"
      repository: "atscale-public/atscale/mimir-gateway"
      tag: "2024.2.1"
